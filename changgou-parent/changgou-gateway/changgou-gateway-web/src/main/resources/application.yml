spring:
  application:
    name: gateway-web
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]': # 匹配所有请求
            allowedOrigins: "*" #跨域处理 允许所有的域  allowedOrigins允许哪些域名跨域
            allowedMethods: # 支持的方法
              - GET
              - POST
              - PUT
              - DELETE
      routes:
        - id: changgou_goods_route     # id唯一标识符
#          uri: http://localhost:18081     #用户请求需要路由到该服务
          #lb:使用LoadBalancerClinet 实现负载均衡，后面是微服务的名称 【主要用于集群环境】
          uri: lb://goods
          predicates:     #路由断言，路由规则配置
#          - Host=localhost**   #用户请求的域名规则配置，cloud.itheima.com需要在hosts文件中配置对应到127.0.0.1 所有以cloud.itheima.com的请求都将路由到http://localhost:18081
          #所有以//brand开始的请求，都路由到http://localhost:18081微服务去
#          - Path=/brand**
          #所有以/api/brand的请求，都被路由到http://localhost:18081微服务去
          #希望该路径由微服务网关自动给我添加上/api前缀，每次请求真实微服务网关的时候，需要使用微服务网关将/api去掉
          - Path=/api/brand/**
#          - Path=/**
          filters:
          #- PrefixPath=/brand
          - StripPrefix=1    #StripPrefix将请求路径中的第1个路径去掉，请求路径以/区分，一个/代表一个路径
#          - PrefixPath=/brand #加前缀
          # 局部限流过滤器，名字不能改RequestRateLimiter
          - name: RequestRateLimiter #请求数限流 名字不能随便写 ，使用默认的facatory
            args:
              #用户身份唯一识别标识符（bean对应的name）
              key-resolver: "#{@ipKeyResolver}"
              #令牌桶填充的速率
              redis-rate-limiter.replenishRate: 1
              #令牌桶的容量
              redis-rate-limiter.burstCapacity: 4
        #用户微服务
        - id: changgou_user_route
          uri: lb://user
          predicates:
          - Path=/api/user/**,/api/address/**,/api/areas/**,/api/cities/**,/api/provinces/**
          filters:
          - StripPrefix=1

        #订单微服务
        - id: changgou_order_route
          uri: lb://order
          predicates:
          - Path=/api/cart/**,/api/categoryReport/**,/api/orderConfig/**,/api/order/**,/api/orderItem/**,/api/orderLog/**,/api/preferential/**,/api/returnCause/**,/api/returnOrder/**,/api/returnOrderItem/**
          filters:
          - StripPrefix=1

  #Redis配置
  redis:
    host: 127.0.0.1
    port: 6379

server:
  port: 8001
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka
  instance:
    prefer-ip-address: true
management:
  endpoint:
    gateway:
      enabled: true
    web:
      exposure:
        include: true

